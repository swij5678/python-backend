name: CI Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", 3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Lint with flake8 (basic check only)
      run: |
        # Only check for critical syntax errors to avoid failing on style issues
        flake8 src tests --count --select=E9,F63,F7,F82 --show-source --statistics || true

    - name: Check code formatting with black (non-blocking)
      run: |
        black --check src tests || echo "Code formatting issues found but continuing..."

    - name: Check import sorting with isort (non-blocking)
      run: |
        isort --check-only src tests || echo "Import sorting issues found but continuing..."

    - name: Test with pytest
      run: |
        pytest tests/ -v

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t python-service:test .
    
    - name: Test Docker image
      run: |
        # Start the container in background
        docker run -d --name test-container -p 8000:8000 python-service:test
        
        # Wait for the service to be ready
        sleep 10
        
        # Test the health endpoint
        curl -f http://localhost:8000/health || exit 1
        
        # Stop the container
        docker stop test-container
